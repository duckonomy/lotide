16
{"last_modification_time":1572485069,"language":2,"import_file":"/home/duckonomy/Development/Git/cquery/src/working_files.cc","args_hash":8583860895283344595,"includes":[{"line":2,"resolved_path":"/home/duckonomy/Development/Git/cquery/src/lsp_diagnostic.h"},{"line":3,"resolved_path":"/home/duckonomy/Development/Git/cquery/src/utils.h"},{"line":8,"resolved_path":"/usr/include/c++/9/mutex"},{"line":9,"resolved_path":"/usr/include/c++/9/string"}],"dependencies":["/home/duckonomy/Development/Git/cquery/src/working_files.cc","/home/duckonomy/Development/Git/cquery/src/lsp_diagnostic.h","/home/duckonomy/Development/Git/cquery/src/lsp.h","/home/duckonomy/Development/Git/cquery/src/config.h","/home/duckonomy/Development/Git/cquery/src/serializer.h","/home/duckonomy/Development/Git/cquery/src/maybe.h","/usr/include/c++/9/utility","/usr/include/c++/9/x86_64-redhat-linux/bits/c++config.h","/usr/include/bits/wordsize.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":14421985358572118677,"detailed_name":"WorkingFile","short_name_offset":0,"short_name_size":11,"kind":23,"hover":"","comments":"","declarations":["34:3-34:14|-1|1|4"],"spell":"12:8-12:19|-1|1|2","extent":"12:1-80:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4,5,6,7],"vars":[0,1,2,3,4,5,6,7],"instances":[],"uses":["34:3-34:14|0|2|4","98:3-98:14|-1|1|4","99:3-99:14|-1|1|4","108:3-108:14|-1|1|4"]},{"id":1,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,2,3,4,5,6,7,8,9,10,11],"uses":[]},{"id":2,"usr":17585957637430179122,"detailed_name":"AbsolutePath","short_name_offset":0,"short_name_size":12,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1],"uses":["14:3-14:15|-1|1|4","34:21-34:33|-1|1|4","98:40-98:52|-1|1|4","99:46-99:58|-1|1|4","105:29-105:41|-1|1|4"]},{"id":3,"usr":12832935930258903227,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["72:3-72:13|-1|1|4","72:41-72:51|-1|1|4","75:41-75:51|-1|1|4"]},{"id":4,"usr":14361423107726702021,"detailed_name":"WorkingFiles","short_name_offset":0,"short_name_size":12,"kind":23,"hover":"","comments":"","declarations":[],"spell":"82:8-82:20|-1|1|2","extent":"82:1-121:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[9,10,11,12,13,14,15,16],"vars":[11],"instances":[],"uses":[]},{"id":5,"usr":3736506478567794209,"detailed_name":"WorkingFiles::Snapshot","short_name_offset":14,"short_name_size":8,"kind":23,"hover":"","comments":"","declarations":[],"spell":"83:10-83:18|4|2|2","extent":"83:3-91:4|4|2|0","bases":[],"derived":[],"types":[],"funcs":[8],"vars":[10],"instances":[],"uses":["115:3-115:11|-1|1|4"]},{"id":6,"usr":1954615117135720897,"detailed_name":"WorkingFiles::Snapshot::File","short_name_offset":24,"short_name_size":4,"kind":23,"hover":"","comments":"","declarations":[],"spell":"84:12-84:16|5|2|2","extent":"84:5-87:6|5|2|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[8,9],"instances":[],"uses":[]},{"id":7,"usr":10953894250181412567,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["108:29-108:47|-1|1|4"]},{"id":8,"usr":2315471524618825066,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["109:23-109:52|-1|1|4"]},{"id":9,"usr":3106420253015131277,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["110:22-110:46|-1|1|4"]}],"funcs":[{"id":0,"usr":17998466016281427835,"detailed_name":"WorkingFile::WorkingFile(const AbsolutePath &filename, const int &buffer_content)","short_name_offset":0,"short_name_size":11,"kind":9,"storage":1,"hover":"","comments":"","declarations":[{"spell":"34:3-34:14|0|2|1","param_spellings":["34:35-34:43","34:64-34:78"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":11728790831267461767,"detailed_name":"void WorkingFile::SetIndexContent(const int &index_content)","short_name_offset":18,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"This should be called when the indexed content has changed.","declarations":[{"spell":"37:8-37:23|0|2|1","param_spellings":["37:43-37:56"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":15458751796935025146,"detailed_name":"void WorkingFile::OnBufferContentUpdated()","short_name_offset":18,"short_name_size":22,"kind":6,"storage":1,"hover":"","comments":"This should be called whenever |buffer_content| has changed.","declarations":[{"spell":"39:8-39:30|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":1368811540439772497,"detailed_name":"int WorkingFile::GetBufferPosFromIndexPos(int line, int *column, bool is_end)","short_name_offset":17,"short_name_size":24,"kind":6,"storage":1,"hover":"","comments":"Finds the buffer line number which maps to index line number |line|.\nAlso resolves |column| if not NULL.\nWhen resolving a range, use is_end = false for begin() and is_end =\ntrue for end() to get a better alignment of |column|.","declarations":[{"spell":"45:17-45:41|0|2|1","param_spellings":["45:46-45:50","45:57-45:63","45:70-45:76"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":16060285045888289128,"detailed_name":"int WorkingFile::GetIndexPosFromBufferPos(int line, int *column, bool is_end)","short_name_offset":17,"short_name_size":24,"kind":6,"storage":1,"hover":"","comments":"Finds the index line number which maps to buffer line number |line|.\nAlso resolves |column| if not NULL.","declarations":[{"spell":"48:17-48:41|0|2|1","param_spellings":["48:46-48:50","48:57-48:63","48:70-48:76"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":17873517845340402346,"detailed_name":"int WorkingFile::FindClosestCallNameInBuffer(lsPosition position, int *active_parameter, lsPosition *completion_position = nullptr) const","short_name_offset":17,"short_name_size":27,"kind":6,"storage":1,"hover":"","comments":"Finds the closest 'callable' name prior to position. This is used for\nsignature help to filter code completion results.\n\n|completion_position| will be point to a good code completion location to\nfor fetching signatures.","declarations":[{"spell":"58:15-58:42|0|2|1","param_spellings":["59:18-59:26","60:12-60:28","61:19-61:38"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":6363753686712060567,"detailed_name":"lsPosition WorkingFile::FindStableCompletionSource(lsPosition position, bool *is_global_completion, int *existing_completion, lsPosition *replace_end_position) const","short_name_offset":24,"short_name_size":26,"kind":6,"storage":1,"hover":"","comments":"Returns a relatively stable completion position (it jumps back until there\nis a non-alphanumeric character).\n\nThe out param |is_global_completion| is set to true if this looks like a\nglobal completion.\nThe out param |existing_completion| is set to any existing completion\ncontent the user has entered.\nThe out param |replace_end_position| is set to the end of the existing\nidentifier, including characters after the original position.","declarations":[{"spell":"72:14-72:40|0|2|1","param_spellings":["72:52-72:60","73:47-73:67","74:54-74:73","75:53-75:73"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":15898468301584722432,"detailed_name":"void WorkingFile::ComputeLineMapping()","short_name_offset":18,"short_name_size":18,"kind":6,"storage":1,"hover":"","comments":"Compute index_to_buffer and buffer_to_index.","declarations":[{"spell":"79:8-79:26|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":2208745998058305086,"detailed_name":"int WorkingFiles::Snapshot::AsUnsavedFiles() const","short_name_offset":28,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"89:32-89:46|5|2|1","param_spellings":[]}],"declaring_type":5,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":5582725041076891381,"detailed_name":"WorkingFile *WorkingFiles::GetFileByFilename(const AbsolutePath &filename)","short_name_offset":27,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"Find the file with the given filename.","declarations":[{"spell":"98:16-98:33|4|2|1","param_spellings":["98:54-98:62"]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":17545298629018270413,"detailed_name":"WorkingFile *WorkingFiles::GetFileByFilenameNoLock(const AbsolutePath &filename)","short_name_offset":27,"short_name_size":23,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"99:16-99:39|4|2|1","param_spellings":["99:60-99:68"]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":263277335911035842,"detailed_name":"void WorkingFiles::DoAction(const int &action)","short_name_offset":19,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"Run |action| under the lock.","declarations":[{"spell":"102:8-102:16|4|2|1","param_spellings":["102:46-102:52"]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":4221283212644963982,"detailed_name":"void WorkingFiles::DoActionOnFile(const AbsolutePath &filename, const int &action)","short_name_offset":19,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"Run |action| on the file identified by |filename|. This executes under the\nlock.","declarations":[{"spell":"105:8-105:22|4|2|1","param_spellings":["105:43-105:51","106:69-106:75"]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":9240844964905775883,"detailed_name":"WorkingFile *WorkingFiles::OnOpen(const lsTextDocumentItem &open)","short_name_offset":27,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"108:16-108:22|4|2|1","param_spellings":["108:49-108:53"]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":9919819465922341214,"detailed_name":"void WorkingFiles::OnChange(const lsTextDocumentDidChangeParams &change)","short_name_offset":19,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"109:8-109:16|4|2|1","param_spellings":["109:54-109:60"]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":7549282765454033196,"detailed_name":"void WorkingFiles::OnClose(const lsTextDocumentIdentifier &close)","short_name_offset":19,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"110:8-110:15|4|2|1","param_spellings":["110:48-110:53"]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":14396274829550632848,"detailed_name":"WorkingFiles::Snapshot WorkingFiles::AsSnapshot(const int &filter_paths)","short_name_offset":37,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"If |filter_paths| is non-empty, only files which contain any of the given\nstrings. For example, {\"foo\", \"bar\"} means that every result has either the\nstring \"foo\" or \"bar\" contained within it.","declarations":[{"spell":"115:12-115:22|4|2|1","param_spellings":["115:55-115:67"]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":3632171678569271577,"detailed_name":"int WorkingFile::version","short_name_offset":17,"short_name_size":7,"hover":"int WorkingFile::version = 0","comments":"","declarations":[],"spell":"13:7-13:14|0|2|2","extent":"13:3-13:18|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":1,"usr":16024192747717852045,"detailed_name":"AbsolutePath WorkingFile::filename","short_name_offset":26,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"14:16-14:24|0|2|2","extent":"14:3-14:24|0|2|0","type":2,"uses":[],"kind":8,"storage":0},{"id":2,"usr":15317704626382279513,"detailed_name":"int WorkingFile::buffer_content","short_name_offset":17,"short_name_size":14,"hover":"","comments":"","declarations":[],"spell":"16:15-16:29|0|2|2","extent":"16:3-16:29|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":3,"usr":11771441317263884353,"detailed_name":"int WorkingFile::index_lines","short_name_offset":17,"short_name_size":11,"hover":"","comments":"Note: This assumes 0-based lines (1-based lines are normally assumed).","declarations":[],"spell":"18:28-18:39|0|2|2","extent":"18:3-18:39|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":4,"usr":8565389233502165125,"detailed_name":"int WorkingFile::buffer_lines","short_name_offset":17,"short_name_size":12,"hover":"","comments":"Note: This assumes 0-based lines (1-based lines are normally assumed).","declarations":[],"spell":"20:28-20:40|0|2|2","extent":"20:3-20:40|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":5,"usr":7824014076208376210,"detailed_name":"int WorkingFile::index_to_buffer","short_name_offset":17,"short_name_size":15,"hover":"","comments":"Mappings between index line number and buffer line number.\nEmpty indicates either buffer or index has been changed and re-computation\nis required.\nFor index_to_buffer[i] == j, if j >= 0, we are confident that index line\ni maps to buffer line j; if j == -1, FindMatchingLine will use the nearest\nconfident lines to resolve its line number.","declarations":[],"spell":"27:20-27:35|0|2|2","extent":"27:3-27:35|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":6,"usr":16989741858283573404,"detailed_name":"int WorkingFile::buffer_to_index","short_name_offset":17,"short_name_size":15,"hover":"","comments":"","declarations":[],"spell":"28:20-28:35|0|2|2","extent":"28:3-28:35|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":7,"usr":7509874837416191216,"detailed_name":"int WorkingFile::diagnostics_","short_name_offset":17,"short_name_size":12,"hover":"","comments":"A set of diagnostics that have been reported for this file.\nNOTE: _ is appended because it must be accessed under the WorkingFiles\nlock!","declarations":[],"spell":"32:29-32:41|0|2|2","extent":"32:3-32:41|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":8,"usr":8169002290604938288,"detailed_name":"int WorkingFiles::Snapshot::File::filename","short_name_offset":34,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"85:19-85:27|6|2|2","extent":"85:7-85:27|6|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":9,"usr":2455595428952342847,"detailed_name":"int WorkingFiles::Snapshot::File::content","short_name_offset":34,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"86:19-86:26|6|2|2","extent":"86:7-86:26|6|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":10,"usr":1670636069768043532,"detailed_name":"int WorkingFiles::Snapshot::files","short_name_offset":28,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"90:23-90:28|5|2|2","extent":"90:5-90:28|5|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":11,"usr":14064349465832119940,"detailed_name":"int WorkingFiles::files_mutex","short_name_offset":18,"short_name_size":11,"hover":"","comments":"Protects |files|.","declarations":[],"spell":"120:14-120:25|4|2|2","extent":"120:3-120:25|4|2|0","type":1,"uses":[],"kind":8,"storage":0}]}