16
{"last_modification_time":1574975693,"language":1,"import_file":"/home/duckonomy/Development/bac/TSAL/examples/rain.cpp","args_hash":8583860895283344595,"includes":[{"line":2,"resolved_path":"/usr/lib/clang/7.0.0/include/omp.h"},{"line":3,"resolved_path":"/usr/include/c++/9/vector"}],"dependencies":[],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,2,3,4,5],"uses":[]},{"id":1,"usr":13,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1],"uses":[]}],"funcs":[{"id":0,"usr":14512784031730521473,"detailed_name":"int main(int argc, char *argv[])","short_name_offset":4,"short_name_size":4,"kind":12,"storage":1,"hover":"","comments":"@example rain.cpp\n\nOne use of multithreaded is to speed up the processing of data. However, in the case of audio,\nprocessing a song at twice the speed doesn't really make sense. As a result, this example was created\nas the next best thing. To make use of the speed up from multithreading, this example parses\nMIDI files that store the entire song on one track. When processed with a single ThreadSynth, \nthe song will play its parts separately. But when processed with the right number of threads. The\nThreadSynths will be playing in unison, and the song will be completed properly.\n\nParse the parameters\\n\nCreate the mixer and synths\\n\nPlay the song through once with only one thread\\n\nRun parallel block\n- Calculate a time offset so the later notes get scheduled at the right time\n- Play the midi events","declarations":[],"spell":"22:5-22:9|-1|1|2","extent":"22:1-59:2|-1|1|0","bases":[],"derived":[],"vars":[0,1,2,3,4,5],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":15967571515145266708,"detailed_name":"int argc","short_name_offset":4,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"22:14-22:18|0|3|2","extent":"22:10-22:18|0|3|0","type":0,"uses":["23:7-23:11|0|3|12"],"kind":253,"storage":1},{"id":1,"usr":8205924040148948563,"detailed_name":"char *[] argv","short_name_offset":9,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"22:26-22:30|0|3|2","extent":"22:20-22:32|0|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":2,"usr":14674316396834347273,"detailed_name":"const int numTracks","short_name_offset":10,"short_name_size":9,"hover":"","comments":"","declarations":[],"spell":"31:13-31:22|0|3|2","extent":"31:3-31:22|0|3|0","type":0,"uses":[],"kind":13,"storage":1},{"id":3,"usr":1082824837309447604,"detailed_name":"int mixer","short_name_offset":4,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"34:15-34:20|0|3|2","extent":"34:3-34:20|0|3|0","type":0,"uses":[],"kind":13,"storage":1},{"id":4,"usr":1782119339455978596,"detailed_name":"int id","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"41:9-41:11|0|3|2","extent":"41:5-41:11|0|3|0","type":0,"uses":[],"kind":13,"storage":1},{"id":5,"usr":12495518811758381036,"detailed_name":"int timeOffset","short_name_offset":4,"short_name_size":10,"hover":"","comments":"","declarations":[],"spell":"46:9-46:19|0|3|2","extent":"46:5-46:19|0|3|0","type":0,"uses":[],"kind":13,"storage":1}]}