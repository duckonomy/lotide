16
{"last_modification_time":1575223075,"language":1,"import_file":"/home/duckonomy/Development/bac/TSAL/extern/portaudio/qa/paqa_latency.c","args_hash":11184243650414851951,"includes":[],"dependencies":["/home/duckonomy/Development/bac/TSAL/extern/portaudio/qa/paqa_latency.c","/usr/include/stdio.h","/usr/include/bits/libc-header-start.h","/usr/include/features.h","/usr/include/sys/cdefs.h","/usr/include/gnu/stubs.h","/usr/include/bits/types.h","/usr/include/bits/types/__fpos_t.h","/usr/include/bits/types/__fpos64_t.h","/usr/include/bits/types/struct_FILE.h","/usr/include/math.h","/usr/include/bits/math-vector.h","/usr/include/bits/floatn.h","/usr/include/bits/floatn-common.h","/usr/lib/clang/7.0.0/include/stddef.h","/usr/lib/clang/7.0.0/include/stdarg.h","/usr/include/bits/types/__mbstate_t.h","/usr/include/bits/types/__FILE.h","/usr/include/bits/types/FILE.h","/usr/include/bits/sys_errlist.h","/usr/include/bits/mathcalls-helper-functions.h","/usr/include/bits/mathcalls.h","/usr/include/portaudio.h","/usr/include/stdc-predef.h","/usr/include/bits/wordsize.h","/usr/include/gnu/stubs-64.h","/usr/include/bits/timesize.h","/usr/include/bits/typesizes.h","/usr/include/bits/time64.h","/usr/include/bits/stdio_lim.h","/usr/include/bits/libm-simd-decl-stubs.h","/usr/include/bits/flt-eval-method.h","/usr/include/bits/fp-logb.h","/usr/include/bits/fp-fast.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1],"uses":[]}],"funcs":[],"vars":[{"id":0,"usr":13521874834549847982,"detailed_name":"int g_testsPassed","short_name_offset":4,"short_name_size":13,"hover":"","comments":"Used to tally the results of the QA tests.","declarations":["42:12-42:25|-1|1|1"],"type":0,"uses":[],"kind":13,"storage":2},{"id":1,"usr":12337059007140677123,"detailed_name":"int g_testsFailed","short_name_offset":4,"short_name_size":13,"hover":"","comments":"","declarations":["43:12-43:25|-1|1|1"],"type":0,"uses":[],"kind":13,"storage":2},{"id":2,"usr":10899172120438856811,"detailed_name":"_QA_TOOLS_H","short_name_offset":0,"short_name_size":11,"hover":"#define _QA_TOOLS_H","comments":"","declarations":[],"spell":"40:9-40:20|-1|1|2","extent":"40:9-40:20|-1|1|0","uses":[],"kind":255,"storage":0},{"id":3,"usr":14106710826582635438,"detailed_name":"QA_ASSERT_TRUE","short_name_offset":0,"short_name_size":14,"hover":"#define QA_ASSERT_TRUE( message, flag )\n if( !(flag) )\n {\n  printf( \"%s:%d - ERROR - %s\\n\", __FILE__, __LINE__, message );\n  g_testsFailed++;\n  goto error;\n }\n else g_testsPassed++;","comments":"","declarations":[],"spell":"45:9-45:23|-1|1|2","extent":"45:9-52:23|-1|1|0","uses":[],"kind":255,"storage":0},{"id":4,"usr":140898197278860009,"detailed_name":"QA_ASSERT_EQUALS","short_name_offset":0,"short_name_size":16,"hover":"#define QA_ASSERT_EQUALS( message, expected, actual )\n if( ((expected) != (actual)) )\n {\n  printf( \"%s:%d - ERROR - %s, expected %d, got %d\\n\", __FILE__, __LINE__, message, expected, actual );\n  g_testsFailed++;\n  goto error;\n }\n else g_testsPassed++;","comments":"","declarations":[],"spell":"55:9-55:25|-1|1|2","extent":"55:9-62:23|-1|1|0","uses":[],"kind":255,"storage":0},{"id":5,"usr":17305842302588628651,"detailed_name":"QA_ASSERT_CLOSE","short_name_offset":0,"short_name_size":15,"hover":"#define QA_ASSERT_CLOSE( message, expected, actual, tolerance )\n if (fabs((expected)-(actual))>(tolerance))\n {\n  printf( \"%s:%d - ERROR - %s, expected %f, got %f, tol=%f\\n\", __FILE__, __LINE__, message, ((double)(expected)), ((double)(actual)), ((double)(tolerance)) );\n  g_testsFailed++;\n  goto error;\n }\n else g_testsPassed++;","comments":"","declarations":[],"spell":"64:9-64:24|-1|1|2","extent":"64:9-71:23|-1|1|0","uses":[],"kind":255,"storage":0},{"id":6,"usr":530702099317419566,"detailed_name":"QA_ASSERT_CLOSE_INT","short_name_offset":0,"short_name_size":19,"hover":"#define QA_ASSERT_CLOSE_INT( message, expected, actual, tolerance )\n    if (abs((expected)-(actual))>(tolerance))\n    {\n        printf( \"%s:%d - ERROR - %s, expected %d, got %d, tol=%d\\n\", __FILE__, __LINE__, message, ((int)(expected)), ((int)(actual)), ((int)(tolerance)) );\n        g_testsFailed++;\n        goto error;\n    }\n    else g_testsPassed++;","comments":"","declarations":[],"spell":"73:9-73:28|-1|1|2","extent":"73:9-80:26|-1|1|0","uses":[],"kind":255,"storage":0}]}