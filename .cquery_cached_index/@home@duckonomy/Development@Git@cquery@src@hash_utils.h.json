16
{"last_modification_time":1572485069,"language":1,"import_file":"/home/duckonomy/Development/Git/cquery/src/threaded_queue.cc","args_hash":8583860895283344595,"includes":[{"line":2,"resolved_path":"/usr/include/c++/9/functional"}],"dependencies":["/home/duckonomy/Development/Git/cquery/src/threaded_queue.cc","/home/duckonomy/Development/Git/cquery/src/threaded_queue.h","/home/duckonomy/Development/Git/cquery/src/utils.h","/home/duckonomy/Development/Git/cquery/src/file_types.h","/usr/include/c++/9/functional","/usr/include/c++/9/x86_64-redhat-linux/bits/c++config.h","/usr/include/c++/9/x86_64-redhat-linux/bits/os_defines.h","/usr/include/features.h","/usr/include/sys/cdefs.h","/usr/include/gnu/stubs.h","/usr/include/c++/9/bits/stl_function.h","/usr/include/c++/9/bits/move.h","/usr/include/c++/9/bits/concept_check.h","/usr/include/c++/9/type_traits","/usr/include/c++/9/new","/usr/include/c++/9/exception","/usr/include/c++/9/bits/exception.h","/usr/include/c++/9/bits/exception_ptr.h","/usr/include/c++/9/bits/cxxabi_init_exception.h","/usr/lib/clang/7.0.0/include/stddef.h","/usr/include/c++/9/typeinfo","/usr/include/c++/9/bits/hash_bytes.h","/usr/include/c++/9/bits/nested_exception.h","/usr/include/c++/9/tuple","/usr/include/c++/9/utility","/usr/include/c++/9/bits/stl_pair.h","/usr/include/c++/9/initializer_list","/usr/include/c++/9/array","/usr/include/c++/9/stdexcept","/usr/include/c++/9/string","/usr/include/c++/9/bits/stringfwd.h","/usr/include/c++/9/bits/memoryfwd.h","/usr/include/c++/9/bits/char_traits.h","/usr/include/c++/9/bits/stl_algobase.h","/usr/include/c++/9/bits/functexcept.h","/usr/include/c++/9/bits/cpp_type_traits.h","/usr/include/c++/9/ext/type_traits.h","/usr/include/c++/9/ext/numeric_traits.h","/usr/include/c++/9/bits/stl_iterator_base_types.h","/usr/include/c++/9/bits/stl_iterator_base_funcs.h","/usr/include/c++/9/bits/stl_iterator.h","/usr/include/c++/9/bits/ptr_traits.h","/usr/include/c++/9/debug/debug.h","/usr/include/c++/9/bits/postypes.h","/usr/include/c++/9/cwchar","/usr/include/wchar.h","/usr/include/bits/libc-header-start.h","/usr/include/bits/floatn.h","/usr/include/bits/floatn-common.h","/usr/include/bits/types/mbstate_t.h","/usr/include/bits/types/locale_t.h","/usr/include/c++/9/cstdint","/usr/lib/clang/7.0.0/include/stdint.h","/usr/include/stdint.h","/usr/include/bits/types.h","/usr/include/bits/stdint-intn.h","/usr/include/bits/stdint-uintn.h","/usr/include/c++/9/bits/allocator.h","/usr/include/c++/9/x86_64-redhat-linux/bits/c++allocator.h","/usr/include/c++/9/ext/new_allocator.h","/usr/include/c++/9/bits/localefwd.h","/usr/include/c++/9/x86_64-redhat-linux/bits/c++locale.h","/usr/include/c++/9/clocale","/usr/include/locale.h","/usr/include/c++/9/iosfwd","/usr/include/c++/9/cctype","/usr/include/ctype.h","/usr/include/endian.h","/usr/include/bits/byteswap.h","/usr/include/bits/uintn-identity.h","/usr/include/c++/9/bits/ostream_insert.h","/usr/include/c++/9/bits/range_access.h","/usr/include/c++/9/bits/basic_string.h","/usr/include/c++/9/ext/atomicity.h","/usr/include/c++/9/x86_64-redhat-linux/bits/gthr.h","/usr/include/c++/9/x86_64-redhat-linux/bits/gthr-default.h","/usr/include/pthread.h","/usr/include/sched.h","/usr/include/bits/types/time_t.h","/usr/include/bits/types/struct_timespec.h","/usr/include/bits/sched.h","/usr/include/time.h","/usr/include/bits/time.h","/usr/include/bits/timex.h","/usr/include/bits/types/struct_timeval.h","/usr/include/bits/types/clock_t.h","/usr/include/bits/types/struct_tm.h","/usr/include/bits/types/clockid_t.h","/usr/include/bits/types/timer_t.h","/usr/include/bits/types/struct_itimerspec.h","/usr/include/bits/pthreadtypes.h","/usr/include/bits/thread-shared-types.h","/usr/include/bits/pthreadtypes-arch.h","/usr/include/bits/setjmp.h","/usr/include/c++/9/ext/alloc_traits.h","/usr/include/c++/9/bits/alloc_traits.h","/usr/include/c++/9/ext/string_conversions.h","/usr/include/c++/9/cstdlib","/usr/include/stdlib.h","/usr/include/sys/types.h","/usr/include/sys/select.h","/usr/include/bits/select.h","/usr/include/bits/types/sigset_t.h","/usr/include/alloca.h","/usr/include/c++/9/bits/std_abs.h","/usr/include/c++/9/cstdio","/usr/include/stdio.h","/usr/include/bits/types/__fpos_t.h","/usr/include/bits/types/__fpos64_t.h","/usr/include/bits/types/struct_FILE.h","/usr/include/bits/types/cookie_io_functions_t.h","/usr/include/c++/9/cerrno","/usr/include/errno.h","/usr/include/bits/errno.h","/usr/include/linux/errno.h","/usr/include/asm/errno.h","/usr/include/asm-generic/errno.h","/usr/include/c++/9/bits/functional_hash.h","/usr/include/c++/9/bits/basic_string.tcc","/usr/include/c++/9/bits/uses_allocator.h","/usr/include/c++/9/bits/invoke.h","/usr/include/c++/9/bits/refwrap.h","/usr/include/c++/9/bits/std_function.h","/home/duckonomy/Development/Git/cquery/src/serializer.h","/home/duckonomy/Development/Git/cquery/src/maybe.h","/usr/include/c++/9/backward/binders.h","/usr/lib/clang/7.0.0/include/__stddef_max_align_t.h","/usr/include/c++/9/bits/stl_relops.h","/usr/include/c++/9/bits/predefined_ops.h","/usr/lib/clang/7.0.0/include/stdarg.h","/usr/include/bits/types/wint_t.h","/usr/include/bits/types/__mbstate_t.h","/usr/include/bits/types/__FILE.h","/usr/include/bits/types/FILE.h","/usr/include/bits/types/__locale_t.h","/usr/include/c++/9/bits/cxxabi_forced.h","/usr/include/bits/types/struct_sched_param.h","/usr/include/bits/cpu-set.h","/usr/include/c++/9/x86_64-redhat-linux/bits/atomic_word.h","/usr/include/bits/types/__sigset_t.h","/usr/include/bits/sys_errlist.h","/usr/include/bits/types/error_t.h","/usr/include/bits/wordsize.h","/usr/include/stdc-predef.h","/usr/include/gnu/stubs-64.h","/usr/include/c++/9/x86_64-redhat-linux/bits/cpu_defines.h","/usr/include/c++/9/bits/exception_defines.h","/usr/include/c++/9/debug/assertions.h","/usr/include/bits/wchar.h","/usr/include/bits/timesize.h","/usr/include/bits/typesizes.h","/usr/include/bits/time64.h","/usr/include/bits/locale.h","/usr/include/bits/endian.h","/usr/include/bits/waitflags.h","/usr/include/bits/waitstatus.h","/usr/include/bits/stdlib-float.h","/usr/include/bits/stdio_lim.h","/usr/include/asm-generic/errno-base.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":5401847601697785946,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["14:26-14:29|-1|1|4","17:26-17:29|-1|1|4","18:3-18:6|1|3|4"]},{"id":1,"usr":2769040230183736412,"detailed_name":"std::size_t","short_name_offset":5,"short_name_size":6,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1],"uses":["14:31-14:37|-1|1|4","17:31-17:37|-1|1|4"]},{"id":2,"usr":710295838304980720,"detailed_name":"T","short_name_offset":0,"short_name_size":1,"kind":26,"hover":"","comments":"","declarations":[],"spell":"16:20-16:21|1|3|2","extent":"16:11-16:21|1|3|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["17:51-17:52|-1|1|4","18:13-18:14|-1|1|4"]},{"id":3,"usr":4361923490739404157,"detailed_name":"Rest","short_name_offset":0,"short_name_size":4,"kind":26,"hover":"","comments":"","declarations":[],"spell":"16:35-16:39|1|3|2","extent":"16:23-16:39|1|3|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["17:57-17:61|-1|1|4"]},{"id":4,"usr":13215310833193140249,"detailed_name":"std::hash","short_name_offset":5,"short_name_size":4,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[4],"uses":["18:8-18:12|-1|1|4"]}],"funcs":[{"id":0,"usr":9148594107632269979,"detailed_name":"inline void hash_combine(std::size_t &seed)","short_name_offset":12,"short_name_size":12,"kind":12,"storage":1,"hover":"","comments":"http://stackoverflow.com/a/38140932\n\n struct SomeHashKey {\n   std::string key1;\n   std::string key2;\n   bool key3;\n };\n MAKE_HASHABLE(SomeHashKey, t.key1, t.key2, t.key3)","declarations":[],"spell":"14:13-14:25|-1|1|2","extent":"14:1-14:47|-1|1|0","bases":[],"derived":[],"vars":[0],"uses":["20:3-20:15|1|3|32"],"callees":[]},{"id":1,"usr":16645019159869047596,"detailed_name":"inline void hash_combine(std::size_t &seed, const T &v, Rest ...rest)","short_name_offset":12,"short_name_size":12,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"17:13-17:25|-1|1|2","extent":"17:1-21:2|-1|1|0","bases":[],"derived":[],"vars":[1,2,3,4],"uses":["20:3-20:15|1|3|32"],"callees":["20:3-20:15|1|3|32","20:3-20:15|0|3|32"]}],"vars":[{"id":0,"usr":12541393845000076300,"detailed_name":"std::size_t &seed","short_name_offset":13,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"14:39-14:43|0|3|2","extent":"14:26-14:43|0|3|0","type":1,"uses":[],"kind":253,"storage":1},{"id":1,"usr":1648470444321585978,"detailed_name":"std::size_t &seed","short_name_offset":13,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"17:39-17:43|1|3|2","extent":"17:26-17:43|1|3|0","type":1,"uses":["19:3-19:7|1|3|4","19:37-19:41|1|3|12","19:51-19:55|1|3|12","20:16-20:20|1|3|4"],"kind":253,"storage":1},{"id":2,"usr":16462407947196068936,"detailed_name":"const T &v","short_name_offset":9,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"17:54-17:55|1|3|2","extent":"17:45-17:55|1|3|0","uses":["19:18-19:19|1|3|4"],"kind":253,"storage":1},{"id":3,"usr":9252688867653310412,"detailed_name":"Rest... rest","short_name_offset":8,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"17:65-17:69|1|3|2","extent":"17:57-17:69|1|3|0","uses":["20:22-20:26|1|3|4"],"kind":253,"storage":1},{"id":4,"usr":5091055069319342915,"detailed_name":"std::hash<T> hasher","short_name_offset":13,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"18:16-18:22|1|3|2","extent":"18:3-18:22|1|3|0","type":4,"uses":["19:11-19:17|1|3|36"],"kind":13,"storage":1},{"id":5,"usr":4206132136815115576,"detailed_name":"MAKE_HASHABLE","short_name_offset":0,"short_name_size":13,"hover":"#define MAKE_HASHABLE(type, ...)\n  namespace std {\n  template <>\n  struct hash<type> {\n    std::size_t operator()(const type& t) const {\n      std::size_t ret = 0;\n      hash_combine(ret, __VA_ARGS__);\n      return ret;\n    }\n  };\n  }","comments":"","declarations":[],"spell":"23:9-23:22|-1|1|2","extent":"23:9-33:4|-1|1|0","uses":[],"kind":255,"storage":0},{"id":6,"usr":11261094085939543130,"detailed_name":"MAKE_ENUM_HASHABLE","short_name_offset":0,"short_name_size":18,"hover":"#define MAKE_ENUM_HASHABLE(type)\n  namespace std {\n  template <>\n  struct hash<type> {\n    std::size_t operator()(const type& t) const {\n      return hash<int>()(static_cast<int>(t));\n    }\n  };\n  }","comments":"","declarations":[],"spell":"35:9-35:27|-1|1|2","extent":"35:9-43:4|-1|1|0","uses":[],"kind":255,"storage":0}]}