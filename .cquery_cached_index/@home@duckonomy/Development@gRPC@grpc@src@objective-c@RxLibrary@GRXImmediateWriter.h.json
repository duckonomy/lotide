16
{"last_modification_time":1574089038,"language":3,"import_file":"/home/duckonomy/Development/gRPC/grpc/src/objective-c/RxLibrary/GRXImmediateWriter.m","args_hash":11184243650414851951,"includes":[{"line":20,"resolved_path":"/home/duckonomy/Development/gRPC/grpc/src/objective-c/RxLibrary/GRXWriter.h"}],"dependencies":["/home/duckonomy/Development/gRPC/grpc/src/objective-c/RxLibrary/GRXImmediateWriter.m","/home/duckonomy/Development/gRPC/grpc/src/objective-c/RxLibrary/GRXWriter.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":11725754453104495301,"detailed_name":"GRXImmediateWriter","short_name_offset":0,"short_name_size":18,"kind":5,"hover":"","comments":"\nUtility to construct GRXWriter instances from values that are immediately available when\nrequired.\n\nThread-safety:\n\nAn object of this class shouldn't be messaged concurrently by more than one thread. It will start\nmessaging the writeable before |startWithWriteable:| returns, in the same thread. That is the\nonly place where the writer can be paused or stopped prematurely.\n\nIf a paused writer of this class is resumed, it will start messaging the writeable, in the same\nthread, before |setState:| returns. Because the object can't be legally accessed concurrently,\nthat's the only place where it can be paused again (or stopped).","declarations":[],"spell":"37:12-37:30|-1|1|2","extent":"37:1-79:5|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4,5],"vars":[],"instances":[],"uses":[]},{"id":1,"usr":1382746906061236996,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":["37:33-37:42|-1|1|4"],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["43:4-43:13|-1|1|4","49:4-49:13|-1|1|4","59:4-59:13|-1|1|4","65:4-65:13|-1|1|4","71:4-71:13|-1|1|4","77:4-77:13|-1|1|4"]}],"funcs":[{"id":0,"usr":2140590016126498116,"detailed_name":"+ (GRXWriter *)writerWithEnumerator:(id)enumerator","short_name_offset":15,"short_name_size":21,"kind":254,"storage":0,"hover":"","comments":"\nReturns a writer that pulls values from the passed NSEnumerator instance and pushes them to\nits writeable. The NSEnumerator is released when it finishes.","declarations":[{"spell":"43:16-43:36|0|2|1","param_spellings":["43:53-43:63"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":17342893499955715877,"detailed_name":"+ (GRXWriter *)writerWithValueSupplier:(id (^)(void))block","short_name_offset":15,"short_name_size":24,"kind":254,"storage":0,"hover":"","comments":"\nReturns a writer that pushes to its writeable the successive values returned by the passed\nblock. When the block first returns nil, it is released.","declarations":[{"spell":"49:16-49:39|0|2|1","param_spellings":["49:54-49:59"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":12016820742967688316,"detailed_name":"+ (GRXWriter *)writerWithContainer:(id)container","short_name_offset":15,"short_name_size":20,"kind":254,"storage":0,"hover":"","comments":"\nReturns a writer that iterates over the values of the passed container and pushes them to\nits writeable. The container is released when the iteration is over.\n\nNote that the usual speed gain of NSFastEnumeration over NSEnumerator results from not having to\ncall one method per element. Because GRXWriteable instances accept values one by one, that speed\ngain doesn't happen here.","declarations":[{"spell":"59:16-59:35|0|2|1","param_spellings":["59:59-59:68"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":4231335256669842747,"detailed_name":"+ (GRXWriter *)writerWithValue:(id)value","short_name_offset":15,"short_name_size":16,"kind":254,"storage":0,"hover":"","comments":"\nReturns a writer that sends the passed value to its writeable and then finishes (releasing the\nvalue).","declarations":[{"spell":"65:16-65:31|0|2|1","param_spellings":["65:36-65:41"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":12311275658210809341,"detailed_name":"+ (GRXWriter *)writerWithError:(id)error","short_name_offset":15,"short_name_size":16,"kind":254,"storage":0,"hover":"","comments":"\nReturns a writer that, as part of its start method, sends the passed error to the writeable\n(then releasing the error).","declarations":[{"spell":"71:16-71:31|0|2|1","param_spellings":["71:43-71:48"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":10164722839609175352,"detailed_name":"+ (GRXWriter *)emptyWriter","short_name_offset":15,"short_name_size":11,"kind":254,"storage":0,"hover":"","comments":"\nReturns a writer that, as part of its start method, finishes immediately without sending any\nvalues to its writeable.","declarations":[{"spell":"77:16-77:27|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[]}