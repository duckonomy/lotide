16
{"last_modification_time":1572485085,"language":2,"import_file":"/home/duckonomy/Development/Git/cquery/third_party/rapidjson/thirdparty/gtest/googlemock/src/gmock.cc","args_hash":8583860895283344595,"includes":[],"dependencies":[],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":9522224876843422807,"detailed_name":"testing","short_name_offset":0,"short_name_size":7,"kind":3,"hover":"","comments":"","declarations":[],"spell":"35:11-35:18|-1|1|2","extent":"35:1-183:2|-1|1|0","bases":[1],"derived":[3],"types":[],"funcs":[],"vars":[0,1],"instances":[],"uses":["35:11-35:18|-1|1|4"]},{"id":1,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":2,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,5,6,16,18,19,21],"uses":[]},{"id":3,"usr":3760883318488515758,"detailed_name":"testing::internal","short_name_offset":9,"short_name_size":8,"kind":3,"hover":"","comments":"","declarations":[],"spell":"51:11-51:19|0|2|2","extent":"51:1-160:2|0|2|0","bases":[0],"derived":[],"types":[],"funcs":[0,1,2,3],"vars":[],"instances":[],"uses":["51:11-51:19|0|2|4"]},{"id":4,"usr":13,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[2,3,7,8,9,11,12,13,15,20],"uses":[]},{"id":5,"usr":3,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[4,10],"uses":[]},{"id":6,"usr":17979272875067197141,"detailed_name":"String","short_name_offset":0,"short_name_size":6,"kind":26,"hover":"","comments":"","declarations":[],"spell":"109:20-109:26|2|3|2","extent":"109:11-109:26|2|3|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["111:39-111:45|-1|1|4"]},{"id":7,"usr":16772015669038865906,"detailed_name":"CharType","short_name_offset":0,"short_name_size":8,"kind":26,"hover":"","comments":"","declarations":[],"spell":"127:20-127:28|3|3|2","extent":"127:11-127:28|3|3|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["128:36-128:44|-1|1|4"]}],"funcs":[{"id":0,"usr":9033199374445675884,"detailed_name":"static const char *testing::internal::ParseGoogleMockFlagValue(const char *str, const char *flag, bool def_optional)","short_name_offset":38,"short_name_size":24,"kind":12,"storage":3,"hover":"","comments":"Parses a string as a command line flag.  The string should have the\nformat \"--gmock_flag=value\".  When def_optional is true, the\n\"=value\" part can be omitted.\n\nReturns the value of the flag, or NULL if the parsing failed.","declarations":[],"spell":"58:20-58:44|3|2|2","extent":"58:1-84:2|3|2|0","declaring_type":3,"bases":[],"derived":[],"vars":[2,3,4,5,6,7],"uses":["94:33-94:57|1|3|36","113:33-113:57|2|3|36"],"callees":[]},{"id":1,"usr":18411677103197133874,"detailed_name":"static bool testing::internal::ParseGoogleMockBoolFlag(const char *str, const char *flag, bool *value)","short_name_offset":31,"short_name_size":23,"kind":12,"storage":3,"hover":"","comments":"Parses a string for a Google Mock bool flag, in the form of\n\"--gmock_flag=value\".\n\nOn success, stores the value of the flag in *value, and returns\ntrue.  On failure, returns false without changing *value.","declarations":[],"spell":"91:13-91:36|3|2|2","extent":"91:1-102:2|3|2|0","declaring_type":3,"bases":[],"derived":[],"vars":[8,9,10,11],"uses":[],"callees":["94:33-94:57|0|3|36","94:33-94:57|0|3|36"]},{"id":2,"usr":7968760968236775290,"detailed_name":"static bool testing::internal::ParseGoogleMockStringFlag(const char *str, const char *flag, String *value)","short_name_offset":31,"short_name_size":25,"kind":12,"storage":3,"hover":"","comments":"Parses a string for a Google Mock string flag, in the form of\n\"--gmock_flag=value\".\n\nOn success, stores the value of the flag in *value, and returns\ntrue.  On failure, returns false without changing *value.","declarations":[],"spell":"110:13-110:38|3|2|2","extent":"110:1-121:2|3|2|0","declaring_type":3,"bases":[],"derived":[],"vars":[12,13,14,15],"uses":[],"callees":["113:33-113:57|0|3|36","113:33-113:57|0|3|36"]},{"id":3,"usr":10689391091909873271,"detailed_name":"void testing::internal::InitGoogleMockImpl(int *argc, CharType **argv)","short_name_offset":24,"short_name_size":18,"kind":12,"storage":1,"hover":"","comments":"The internal implementation of InitGoogleMock().\n\nThe type parameter CharType can be instantiated to either char or\nwchar_t.","declarations":[],"spell":"128:6-128:24|3|2|2","extent":"128:1-158:2|3|2|0","declaring_type":3,"bases":[],"derived":[],"vars":[16,17,18,19,20,21],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":2790133588609649884,"detailed_name":"int testing::GMOCK_DEFINE_bool_","short_name_offset":13,"short_name_size":18,"hover":"","comments":"TODO(wan@google.com): support using environment variables to\ncontrol the flag values, like what Google Test does.","declarations":[],"spell":"40:1-40:19|0|2|2","extent":"40:1-40:19|0|2|0","type":2,"uses":[],"kind":13,"storage":1},{"id":1,"usr":17318993034116049618,"detailed_name":"int testing::GMOCK_DEFINE_string_","short_name_offset":13,"short_name_size":20,"hover":"","comments":"","declarations":[],"spell":"44:1-44:21|0|2|2","extent":"44:1-44:21|0|2|0","type":2,"uses":[],"kind":13,"storage":1},{"id":2,"usr":10818043688756353571,"detailed_name":"const char *str","short_name_offset":12,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"58:57-58:60|0|3|2","extent":"58:45-58:60|0|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":3,"usr":9985730008742365329,"detailed_name":"const char *flag","short_name_offset":12,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"59:57-59:61|0|3|2","extent":"59:45-59:61|0|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":4,"usr":8327242327660892701,"detailed_name":"bool def_optional","short_name_offset":5,"short_name_size":12,"hover":"","comments":"","declarations":[],"spell":"60:50-60:62|0|3|2","extent":"60:45-60:62|0|3|0","type":5,"uses":["73:7-73:19|0|3|12"],"kind":253,"storage":1},{"id":5,"usr":3184531053640167823,"detailed_name":"const int flag_str","short_name_offset":10,"short_name_size":8,"hover":"","comments":"The flag must start with \"--gmock_\".","declarations":[],"spell":"65:21-65:29|0|3|2","extent":"65:3-65:29|0|3|0","type":2,"uses":[],"kind":13,"storage":1},{"id":6,"usr":13852883591995827945,"detailed_name":"const int flag_len","short_name_offset":10,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"66:16-66:24|0|3|2","extent":"66:3-66:24|0|3|0","type":2,"uses":[],"kind":13,"storage":1},{"id":7,"usr":4673558045110941323,"detailed_name":"const char *flag_end","short_name_offset":12,"short_name_size":8,"hover":"","comments":"Skips the flag name.","declarations":[],"spell":"70:15-70:23|0|3|2","extent":"70:3-70:23|0|3|0","type":4,"uses":["73:24-73:32|0|3|12","74:12-74:20|0|3|12","83:10-83:18|0|3|12"],"kind":13,"storage":1},{"id":8,"usr":15664743375214287600,"detailed_name":"const char *str","short_name_offset":12,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"91:49-91:52|1|3|2","extent":"91:37-91:52|1|3|0","type":4,"uses":["94:58-94:61|1|3|12"],"kind":253,"storage":1},{"id":9,"usr":7954242225806983317,"detailed_name":"const char *flag","short_name_offset":12,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"91:66-91:70|1|3|2","extent":"91:54-91:70|1|3|0","type":4,"uses":["94:63-94:67|1|3|12"],"kind":253,"storage":1},{"id":10,"usr":16695697420882016599,"detailed_name":"bool *value","short_name_offset":6,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"92:43-92:48|1|3|2","extent":"92:37-92:48|1|3|0","type":5,"uses":["100:4-100:9|1|3|12"],"kind":253,"storage":1},{"id":11,"usr":5786041606063818838,"detailed_name":"const char *const value_str","short_name_offset":18,"short_name_size":9,"hover":"const char *const value_str = ParseGoogleMockFlagValue(str, flag, true)","comments":"Gets the value of the flag as a string.","declarations":[],"spell":"94:21-94:30|1|3|2","extent":"94:3-94:74|1|3|0","type":4,"uses":["100:15-100:24|1|3|12","100:36-100:45|1|3|12","100:57-100:66|1|3|12"],"kind":13,"storage":1},{"id":12,"usr":1221246991080938469,"detailed_name":"const char *str","short_name_offset":12,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"110:51-110:54|2|3|2","extent":"110:39-110:54|2|3|0","type":4,"uses":["113:58-113:61|2|3|12"],"kind":253,"storage":1},{"id":13,"usr":11087731218187854815,"detailed_name":"const char *flag","short_name_offset":12,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"110:68-110:72|2|3|2","extent":"110:56-110:72|2|3|0","type":4,"uses":["113:63-113:67|2|3|12"],"kind":253,"storage":1},{"id":14,"usr":8341035092844072387,"detailed_name":"String *value","short_name_offset":8,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"111:47-111:52|2|3|2","extent":"111:39-111:52|2|3|0","uses":["119:4-119:9|2|3|4"],"kind":253,"storage":1},{"id":15,"usr":11368552273389990655,"detailed_name":"const char *const value_str","short_name_offset":18,"short_name_size":9,"hover":"const char *const value_str = ParseGoogleMockFlagValue(str, flag, false)","comments":"Gets the value of the flag as a string.","declarations":[],"spell":"113:21-113:30|2|3|2","extent":"113:3-113:75|2|3|0","type":4,"uses":["119:12-119:21|2|3|4"],"kind":13,"storage":1},{"id":16,"usr":10756934214236692518,"detailed_name":"int *argc","short_name_offset":5,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"128:30-128:34|3|3|2","extent":"128:25-128:34|3|3|0","type":2,"uses":["131:18-131:22|3|3|4","132:8-132:12|3|3|12","134:25-134:29|3|3|12","146:29-146:33|3|3|12","151:9-151:13|3|3|12"],"kind":253,"storage":1},{"id":17,"usr":1621657287620585349,"detailed_name":"CharType **argv","short_name_offset":11,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"128:47-128:51|3|3|2","extent":"128:36-128:51|3|3|0","uses":["131:24-131:28|3|3|4","147:9-147:13|3|3|4","147:19-147:23|3|3|4"],"kind":253,"storage":1},{"id":18,"usr":5882771643088283360,"detailed_name":"int i","short_name_offset":4,"short_name_size":1,"hover":"int i = 1","comments":"","declarations":[],"spell":"134:12-134:13|3|3|2","extent":"134:8-134:17|3|3|0","type":2,"uses":["134:19-134:20|3|3|12","134:31-134:32|3|3|28","146:20-146:21|-1|1|4","155:7-155:8|3|3|28"],"kind":13,"storage":1},{"id":19,"usr":12948518579701296580,"detailed_name":"const int arg_string","short_name_offset":10,"short_name_size":10,"hover":"","comments":"","declarations":[],"spell":"135:23-135:33|3|3|2","extent":"135:5-135:33|3|3|0","type":2,"uses":[],"kind":13,"storage":1},{"id":20,"usr":9727567560480321645,"detailed_name":"const char *const arg","short_name_offset":18,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"136:23-136:26|3|3|2","extent":"136:5-136:26|3|3|0","type":4,"uses":[],"kind":13,"storage":1},{"id":21,"usr":9644690867577378357,"detailed_name":"int j","short_name_offset":4,"short_name_size":1,"hover":"int j = i","comments":"Yes.  Shift the remainder of the argv list left by one.  Note\nthat argv has (*argc + 1) elements, the last one always being\nNULL.  The following loop moves the trailing NULL element as\nwell.","declarations":[],"spell":"146:16-146:17|3|3|2","extent":"146:12-146:21|3|3|0","type":2,"uses":["146:23-146:24|3|3|12","146:35-146:36|3|3|28","147:14-147:15|3|3|4","147:24-147:25|3|3|12"],"kind":13,"storage":1}]}