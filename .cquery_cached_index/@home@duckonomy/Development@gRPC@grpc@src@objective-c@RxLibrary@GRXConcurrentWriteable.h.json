16
{"last_modification_time":1574089038,"language":3,"import_file":"/home/duckonomy/Development/gRPC/grpc/src/objective-c/RxLibrary/GRXConcurrentWriteable.m","args_hash":11184243650414851951,"includes":[{"line":20,"resolved_path":"/home/duckonomy/Development/gRPC/grpc/src/objective-c/RxLibrary/GRXWriteable.h"},{"line":21,"resolved_path":"/home/duckonomy/Development/gRPC/grpc/src/objective-c/RxLibrary/GRXWriter.h"}],"dependencies":["/home/duckonomy/Development/gRPC/grpc/src/objective-c/RxLibrary/GRXConcurrentWriteable.m","/home/duckonomy/Development/gRPC/grpc/src/objective-c/RxLibrary/GRXWriteable.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":6086310971352113453,"detailed_name":"GRXConcurrentWriteable","short_name_offset":0,"short_name_size":22,"kind":5,"hover":"","comments":"\nThis is a thread-safe wrapper over a GRXWriteable instance. It lets one enqueue calls to a\nGRXWriteable instance for the thread user provided, guaranteeing that writesFinishedWithError: is\nthe last message sent to it (no matter what messages are sent to the wrapper, in what order, nor\nfrom which thread). It also guarantees that, if cancelWithError: is called (e.g. by the app\ncancelling the writes), no further messages are sent to the writeable except\nwritesFinishedWithError:.\n\nTODO(jcanizales): Let the user specify another queue for the writeable callbacks.","declarations":[],"spell":"34:12-34:34|-1|1|2","extent":"34:1-71:5|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4,5],"vars":[],"instances":[],"uses":[]},{"id":1,"usr":4642885730747170048,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["41:4-41:16|-1|1|4","43:4-43:16|-1|1|4"]},{"id":2,"usr":1247088855879664134,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["41:39-41:51|-1|1|4","43:39-43:51|-1|1|4"]}],"funcs":[{"id":0,"usr":12310247694018019048,"detailed_name":"- (instancetype)initWithWriteable:(id<GRXWriteable>)writeable dispatchQueue:(id)queue","short_name_offset":-1,"short_name_size":32,"kind":6,"storage":0,"hover":"","comments":"\nThe GRXWriteable passed is the wrapped writeable.\nThe GRXWriteable instance is retained until writesFinishedWithError: is sent to it, and released\nafter that.","declarations":[{"spell":"41:17-41:34|0|2|1","param_spellings":["41:53-41:62","42:53-42:58"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":12653865438710044786,"detailed_name":"- (instancetype)initWithWriteable:(id<GRXWriteable>)writeable","short_name_offset":16,"short_name_size":18,"kind":6,"storage":0,"hover":"","comments":"","declarations":[{"spell":"43:17-43:34|0|2|1","param_spellings":["43:53-43:62"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":16176267637962774859,"detailed_name":"- (void)enqueueValue:(id)value completionHandler:(void (^)(void))handler","short_name_offset":-1,"short_name_size":31,"kind":6,"storage":0,"hover":"","comments":"\nEnqueues writeValue: to be sent to the writeable from the designated dispatch queue.\nThe passed handler is invoked from designated dispatch queue after writeValue: returns.","declarations":[{"spell":"49:9-49:21|0|2|1","param_spellings":["49:26-49:31","49:66-49:73"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":3300382256847023001,"detailed_name":"- (void)enqueueSuccessfulCompletion","short_name_offset":8,"short_name_size":27,"kind":6,"storage":0,"hover":"","comments":"\nEnqueues writesFinishedWithError:nil to be sent to the writeable in the designated dispatch\nqueue. After that message is sent to the writeable, all other methods of this object are\neffectively noops.","declarations":[{"spell":"56:9-56:36|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":2012546135138999503,"detailed_name":"- (void)cancelWithError:(id)error","short_name_offset":8,"short_name_size":16,"kind":6,"storage":0,"hover":"","comments":"\nIf the writeable has not yet received a writesFinishedWithError: message, this will enqueue one\nto be sent to it in the designated dispatch queue, and cancel all other pending messages to the\nwriteable enqueued by this object (both past and future).\nThe error argument cannot be nil.","declarations":[{"spell":"64:9-64:24|0|2|1","param_spellings":["64:36-64:41"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":12071131507933575974,"detailed_name":"- (void)cancelSilently","short_name_offset":8,"short_name_size":14,"kind":6,"storage":0,"hover":"","comments":"\nCancels all pending messages to the writeable enqueued by this object (both past and future).\nBecause the writeable won't receive writesFinishedWithError:, this also releases the writeable.","declarations":[{"spell":"70:9-70:23|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[]}