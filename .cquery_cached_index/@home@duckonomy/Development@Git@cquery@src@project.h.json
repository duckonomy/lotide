16
{"last_modification_time":1572485069,"language":2,"import_file":"/home/duckonomy/Development/Git/cquery/src/project.cc","args_hash":8583860895283344595,"includes":[{"line":2,"resolved_path":"/home/duckonomy/Development/Git/cquery/src/config.h"},{"line":3,"resolved_path":"/home/duckonomy/Development/Git/cquery/src/method.h"},{"line":8,"resolved_path":"/usr/include/c++/9/functional"},{"line":9,"resolved_path":"/usr/include/c++/9/mutex"},{"line":10,"resolved_path":"/usr/include/c++/9/string"},{"line":11,"resolved_path":"/usr/include/c++/9/vector"}],"dependencies":["/home/duckonomy/Development/Git/cquery/src/project.cc","/home/duckonomy/Development/Git/cquery/src/config.h","/home/duckonomy/Development/Git/cquery/src/serializer.h","/home/duckonomy/Development/Git/cquery/src/maybe.h","/usr/include/c++/9/utility","/usr/include/c++/9/x86_64-redhat-linux/bits/c++config.h","/usr/include/bits/wordsize.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":13468436934693600766,"detailed_name":"QueueManager","short_name_offset":0,"short_name_size":12,"kind":5,"hover":"","comments":"","declarations":["14:7-14:19|-1|1|1"],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["60:14-60:26|-1|1|4"]},{"id":1,"usr":14361423107726702021,"detailed_name":"WorkingFiles","short_name_offset":0,"short_name_size":12,"kind":23,"hover":"","comments":"","declarations":["15:8-15:20|-1|1|1"],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["60:35-60:47|-1|1|4"]},{"id":2,"usr":604477560454905690,"detailed_name":"Project","short_name_offset":0,"short_name_size":7,"kind":23,"hover":"","comments":"","declarations":[],"spell":"17:8-17:15|-1|1|2","extent":"17:1-61:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4],"vars":[3,4,5,6],"instances":[],"uses":[]},{"id":3,"usr":5632736343793112054,"detailed_name":"Project::Entry","short_name_offset":9,"short_name_size":5,"kind":23,"hover":"","comments":"","declarations":[],"spell":"18:10-18:15|2|2|2","extent":"18:3-23:4|2|2|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[0,1,2],"instances":[],"uses":["48:3-48:8|-1|1|4"]},{"id":4,"usr":17585957637430179122,"detailed_name":"AbsolutePath","short_name_offset":0,"short_name_size":12,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0],"uses":["19:5-19:17|-1|1|4","44:19-44:31|-1|1|4","48:43-48:55|-1|1|4","54:30-54:42|-1|1|4"]},{"id":5,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1,3,4,5,6],"uses":[]},{"id":6,"usr":3,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[2],"uses":[]}],"funcs":[{"id":0,"usr":15244502980812973233,"detailed_name":"void Project::Load(const AbsolutePath &root_directory)","short_name_offset":14,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"Loads a project for the given |directory|.\n\nIf |g_config->compilationDatabaseDirectory| is not empty, look for .cquery\nor compile_commands.json in it, otherwise they are retrieved in\n|root_directory|.\n\nFor .cquery, recursive directory listing is used and files with known\nsuffixes are indexed. .cquery files can exist in subdirectories and they\nwill affect flags in their subtrees (relative paths are relative to the\nproject root, not subdirectories). For compile_commands.json, its entries\nare indexed.","declarations":[{"spell":"44:8-44:12|2|2|1","param_spellings":["44:33-44:47"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":13799749041336626730,"detailed_name":"Project::Entry Project::FindCompilationEntryForFile(const AbsolutePath &filename)","short_name_offset":24,"short_name_size":27,"kind":6,"storage":1,"hover":"","comments":"Lookup the CompilationEntry for |filename|. If no entry was found this\nwill infer one based on existing project structure.","declarations":[{"spell":"48:9-48:36|2|2|1","param_spellings":["48:57-48:65"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":4415795894158944143,"detailed_name":"void Project::SetFlagsForFile(const int &flags, const AbsolutePath &path)","short_name_offset":14,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"If the client has overridden the flags, or specified them for a file\nthat is not in the compilation_database.json make sure those changes\nare permanent.","declarations":[{"spell":"53:8-53:23|2|2|1","param_spellings":["53:56-53:61","54:44-54:48"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":1924131772581210442,"detailed_name":"void Project::ForAllFilteredFiles(int action)","short_name_offset":14,"short_name_size":19,"kind":6,"storage":1,"hover":"","comments":"Run |action| on every file in the project.","declarations":[{"spell":"57:8-57:27|2|2|1","param_spellings":["58:54-58:60"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":18242441737827729011,"detailed_name":"void Project::Index(QueueManager *queue, WorkingFiles *working_files, int id)","short_name_offset":14,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"60:8-60:13|2|2|1","param_spellings":["60:28-60:33","60:49-60:62","60:76-60:78"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":15024705695067445906,"detailed_name":"AbsolutePath Project::Entry::filename","short_name_offset":29,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"19:18-19:26|3|2|2","extent":"19:5-19:26|3|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":1,"usr":14122105105587187737,"detailed_name":"int Project::Entry::args","short_name_offset":20,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"20:30-20:34|3|2|2","extent":"20:5-20:34|3|2|0","type":5,"uses":[],"kind":8,"storage":0},{"id":2,"usr":14060308731222786824,"detailed_name":"bool Project::Entry::is_inferred","short_name_offset":21,"short_name_size":11,"hover":"bool Project::Entry::is_inferred = false","comments":"If true, this entry is inferred and was not read from disk.","declarations":[],"spell":"22:10-22:21|3|2|2","extent":"22:5-22:29|3|2|0","type":6,"uses":[],"kind":8,"storage":0},{"id":3,"usr":499417374353589580,"detailed_name":"int Project::quote_include_directories","short_name_offset":13,"short_name_size":25,"hover":"","comments":"Include directories for \"\" headers","declarations":[],"spell":"26:26-26:51|2|2|2","extent":"26:3-26:51|2|2|0","type":5,"uses":[],"kind":8,"storage":0},{"id":4,"usr":5184835854621973856,"detailed_name":"int Project::angle_include_directories","short_name_offset":13,"short_name_size":25,"hover":"","comments":"Include directories for <> headers","declarations":[],"spell":"28:26-28:51|2|2|2","extent":"28:3-28:51|2|2|0","type":5,"uses":[],"kind":8,"storage":0},{"id":5,"usr":956515911795384501,"detailed_name":"int Project::entries","short_name_offset":13,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"30:22-30:29|2|2|2","extent":"30:3-30:29|2|2|0","type":5,"uses":[],"kind":8,"storage":0},{"id":6,"usr":12124129882434090586,"detailed_name":"int Project::absolute_path_to_entry_index_","short_name_offset":13,"short_name_size":29,"hover":"","comments":"","declarations":[],"spell":"31:43-31:72|2|2|2","extent":"31:3-31:72|2|2|0","type":5,"uses":[],"kind":8,"storage":0}]}