16
{"last_modification_time":1572485083,"language":1,"import_file":"/home/duckonomy/Development/Git/cquery/third_party/pugixml/docs/samples/load_memory.cpp","args_hash":8583860895283344595,"includes":[{"line":2,"resolved_path":"/usr/include/c++/9/iostream"},{"line":3,"resolved_path":"/usr/include/c++/9/cstring"}],"dependencies":["/usr/include/c++/9/iostream","/usr/include/c++/9/x86_64-redhat-linux/bits/c++config.h","/usr/include/bits/wordsize.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":13,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,4,6],"uses":[]},{"id":1,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1,2,3,5,7,8],"uses":[]}],"funcs":[{"id":0,"usr":7033269674615638282,"detailed_name":"int main()","short_name_offset":4,"short_name_size":4,"kind":12,"storage":1,"hover":"","comments":"","declarations":[],"spell":"6:5-6:9|-1|1|2","extent":"6:1-64:2|-1|1|0","bases":[],"derived":[],"vars":[0,1,2,3,4,5,6,7,8],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":7946062969094522655,"detailed_name":"const char [52] source","short_name_offset":16,"short_name_size":6,"hover":"","comments":"tag::decl[]","declarations":[],"spell":"9:16-9:22|0|3|2","extent":"9:5-9:80|0|3|0","type":0,"uses":[],"kind":13,"storage":1},{"id":1,"usr":17862430394920819427,"detailed_name":"int size","short_name_offset":4,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"10:12-10:16|0|3|2","extent":"10:5-10:16|0|3|0","type":1,"uses":[],"kind":13,"storage":1},{"id":2,"usr":8268363115335589805,"detailed_name":"int doc","short_name_offset":4,"short_name_size":3,"hover":"","comments":"end::decl[]","declarations":[],"spell":"13:24-13:27|0|3|2","extent":"13:5-13:27|0|3|0","type":1,"uses":[],"kind":13,"storage":1},{"id":3,"usr":12160085925882808293,"detailed_name":"int result","short_name_offset":4,"short_name_size":6,"hover":"","comments":"tag::load_buffer[]\n // You can use load_buffer to load document from immutable memory block:","declarations":[],"spell":"18:32-18:38|0|3|2","extent":"18:9-18:38|0|3|0","type":1,"uses":[],"kind":13,"storage":1},{"id":4,"usr":9813504277159131424,"detailed_name":"char *buffer","short_name_offset":6,"short_name_size":6,"hover":"char *buffer = new char","comments":"tag::load_buffer_inplace_begin[]\n // You can use load_buffer_inplace to load document from mutable memory block; the block's lifetime must exceed that of document","declarations":[],"spell":"27:15-27:21|0|3|2","extent":"27:9-27:32|0|3|0","type":0,"uses":["38:18-38:24|0|3|12"],"kind":13,"storage":1},{"id":5,"usr":17530342317747094385,"detailed_name":"int result","short_name_offset":4,"short_name_size":6,"hover":"","comments":"The block can be allocated by any method; the block is modified during parsing","declarations":[],"spell":"31:32-31:38|0|3|2","extent":"31:9-31:38|0|3|0","type":1,"uses":[],"kind":13,"storage":1},{"id":6,"usr":3281530473693851998,"detailed_name":"char *buffer","short_name_offset":6,"short_name_size":6,"hover":"","comments":"tag::load_buffer_inplace_own[]\n // You can use load_buffer_inplace_own to load document from mutable memory block and to pass the ownership of this block\n // The block has to be allocated via pugixml allocation function - using i.e. operator new here is incorrect","declarations":[],"spell":"46:15-46:21|0|3|2","extent":"46:9-46:21|0|3|0","type":0,"uses":[],"kind":13,"storage":1},{"id":7,"usr":14377402425294735057,"detailed_name":"int result","short_name_offset":4,"short_name_size":6,"hover":"","comments":"The block will be deleted by the document","declarations":[],"spell":"50:32-50:38|0|3|2","extent":"50:9-50:38|0|3|0","type":1,"uses":[],"kind":13,"storage":1},{"id":8,"usr":3208881624644628739,"detailed_name":"int result","short_name_offset":4,"short_name_size":6,"hover":"","comments":"tag::load_string[]\n // You can use load to load document from null-terminated strings, for example literals:","declarations":[],"spell":"59:32-59:38|0|3|2","extent":"59:9-59:38|0|3|0","type":1,"uses":[],"kind":13,"storage":1}]}