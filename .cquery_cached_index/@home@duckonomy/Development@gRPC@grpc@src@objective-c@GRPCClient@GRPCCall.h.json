16
{"last_modification_time":1574089038,"language":3,"import_file":"/home/duckonomy/Development/gRPC/grpc/src/objective-c/GRPCClient/GRPCInterceptor.m","args_hash":11184243650414851951,"includes":[{"line":38,"resolved_path":"/home/duckonomy/Development/gRPC/grpc/src/objective-c/GRPCClient/GRPCCallOptions.h"},{"line":39,"resolved_path":"/home/duckonomy/Development/gRPC/grpc/src/objective-c/GRPCClient/GRPCDispatchable.h"},{"line":40,"resolved_path":"/home/duckonomy/Development/gRPC/grpc/src/objective-c/GRPCClient/GRPCTypes.h"},{"line":44,"resolved_path":"/home/duckonomy/Development/gRPC/grpc/src/objective-c/GRPCClient/GRPCCallLegacy.h"}],"dependencies":["/home/duckonomy/Development/gRPC/grpc/src/objective-c/GRPCClient/GRPCInterceptor.m","/home/duckonomy/Development/gRPC/grpc/src/objective-c/GRPCClient/GRPCInterceptor.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":16292373978371803254,"detailed_name":"GRPCResponseHandler","short_name_offset":0,"short_name_size":19,"kind":11,"hover":"","comments":"An object can implement this protocol to receive responses from server from a call.","declarations":[],"spell":"50:11-50:30|-1|1|2","extent":"50:1-96:5|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["143:44-143:63|-1|1|4","151:44-151:63|-1|1|4"]},{"id":1,"usr":5094806017520349239,"detailed_name":"GRPCRequestOptions","short_name_offset":0,"short_name_size":18,"kind":5,"hover":"","comments":"\nHTTP request parameters. If Protobuf is used, these parameters are automatically generated by\nProtobuf. If directly using the GRPCCall2 class, users should specify these parameters manually.","declarations":[],"spell":"102:12-102:30|-1|1|2","extent":"102:1-123:5|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[5,6,7,8,9,10],"vars":[],"instances":[4],"uses":["142:41-142:59|-1|1|4","150:41-150:59|-1|1|4","191:27-191:45|-1|1|4"]},{"id":2,"usr":4642885730747170048,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["104:4-104:16|-1|1|4","106:4-106:16|-1|1|4","109:4-109:16|-1|1|4","132:4-132:16|-1|1|4","134:4-134:16|-1|1|4","142:4-142:16|-1|1|4","150:4-150:16|-1|1|4"]},{"id":3,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,2,3],"uses":[]},{"id":4,"usr":10364296185183573433,"detailed_name":"GRPCCall2","short_name_offset":0,"short_name_size":9,"kind":5,"hover":"","comments":"\nA GRPCCall2 object represents an RPC call.","declarations":[],"spell":"130:12-130:21|-1|1|2","extent":"130:1-193:5|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[11,12,13,14,15,16,17,18,19,20,21],"vars":[],"instances":[],"uses":[]}],"funcs":[{"id":0,"usr":11624124376311850941,"detailed_name":"- (void)didReceiveInitialMetadata:(id)initialMetadata","short_name_offset":8,"short_name_size":26,"kind":6,"storage":0,"hover":"","comments":"\nIssued when initial metadata is received from the server.","declarations":[{"spell":"57:9-57:34|-1|1|1","param_spellings":["57:60-57:75"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":299130894246267943,"detailed_name":"- (void)didReceiveRawMessage:(id)message","short_name_offset":8,"short_name_size":21,"kind":6,"storage":0,"hover":"","comments":"\nIssued when a message is received from the server. The message is the raw data received from the\nserver, with decompression and without proto deserialization.\n\n<b> This method is deprecated and does not work with interceptors.</b> To use GRPCCall2 interface\nwith interceptor, please implement GRPCResponseHandler::didReceiveData method and leave this\nmethod unimplemented. If this method and didReceiveRawMessage are implemented at the same time,\nimplementation of this method will be ignored.","declarations":[{"spell":"68:9-68:29|-1|1|1","param_spellings":["68:49-68:56"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":17878009783697645777,"detailed_name":"- (void)didReceiveData:(id)data","short_name_offset":8,"short_name_size":15,"kind":6,"storage":0,"hover":"","comments":"\nIssued when gRPC message is received from the server. The data is always decompressed with gRPC\nor HTTP compression algorithm specified in the response header. \\p data could be any type as\ntransport layer and interceptors may modify the type of the data (e.g. a Protobuf interceptor may\nconsume NSData typed data and issue GPBMessage typed data to user). Users should interpret \\p\ndata according to the configuration of their calls. Interceptor authors should not assume the\ntype of \\p data unless an agreement is made on how it should be used in a particular call\nsetting.","declarations":[{"spell":"79:9-79:23|-1|1|1","param_spellings":["79:28-79:32"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":8163224716599934079,"detailed_name":"- (void)didCloseWithTrailingMetadata:(id)trailingMetadata error:(id)error","short_name_offset":-1,"short_name_size":35,"kind":6,"storage":0,"hover":"","comments":"\nIssued when a call finished. If the call finished successfully, \\p error is nil and \\p\ntrailingMetadata consists any trailing metadata received from the server. Otherwise, \\p error\nis non-nil and contains the corresponding error information, including gRPC error codes and\nerror descriptions.","declarations":[{"spell":"87:9-87:37|-1|1|1","param_spellings":["87:63-87:79","88:58-88:63"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":18125201049429183338,"detailed_name":"- (void)didWriteData","short_name_offset":8,"short_name_size":12,"kind":6,"storage":0,"hover":"","comments":"\nIssued when flow control is enabled for the call and a message written with GRPCCall2::writeData\nis passed to gRPC core with SEND_MESSAGE operation.","declarations":[{"spell":"94:9-94:21|-1|1|1","param_spellings":[]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":14492854672197568801,"detailed_name":"- (instancetype)init","short_name_offset":16,"short_name_size":4,"kind":6,"storage":0,"hover":"","comments":"","declarations":[{"spell":"104:17-104:21|1|2|1","param_spellings":[]}],"declaring_type":1,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":9321715385084748466,"detailed_name":"+ (instancetype)new","short_name_offset":16,"short_name_size":3,"kind":254,"storage":0,"hover":"","comments":"","declarations":[{"spell":"106:18-106:21|1|2|1","param_spellings":[]}],"declaring_type":1,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":3145662055067016244,"detailed_name":"- (instancetype)initWithHost:(id)host path:(id)path safety:(id)safety","short_name_offset":-1,"short_name_size":25,"kind":6,"storage":0,"hover":"","comments":"Initialize with all properties.","declarations":[{"spell":"109:17-109:29|1|2|1","param_spellings":["109:42-109:46","110:42-110:46","111:46-111:52"]}],"declaring_type":1,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":14777505094331982369,"detailed_name":"- (int *)host","short_name_offset":9,"short_name_size":4,"kind":6,"storage":0,"hover":"","comments":"","declarations":[{"spell":"0:0-0:0|1|2|1","param_spellings":[]}],"declaring_type":1,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":1521266890420745007,"detailed_name":"- (int *)path","short_name_offset":9,"short_name_size":4,"kind":6,"storage":0,"hover":"","comments":"","declarations":[{"spell":"0:0-0:0|1|2|1","param_spellings":[]}],"declaring_type":1,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":10917439130283295588,"detailed_name":"- (int)safety","short_name_offset":7,"short_name_size":6,"kind":6,"storage":0,"hover":"","comments":"","declarations":[{"spell":"0:0-0:0|1|2|1","param_spellings":[]}],"declaring_type":1,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":15604208199622202538,"detailed_name":"- (instancetype)init","short_name_offset":16,"short_name_size":4,"kind":6,"storage":0,"hover":"","comments":"","declarations":[{"spell":"132:17-132:21|4|2|1","param_spellings":[]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":16260259253979273224,"detailed_name":"+ (instancetype)new","short_name_offset":16,"short_name_size":3,"kind":254,"storage":0,"hover":"","comments":"","declarations":[{"spell":"134:18-134:21|4|2|1","param_spellings":[]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":10550960259014295470,"detailed_name":"- (instancetype)initWithRequestOptions:(GRPCRequestOptions *)requestOptions responseHandler:(id<GRPCResponseHandler>)responseHandler callOptions:(id)callOptions","short_name_offset":-1,"short_name_size":51,"kind":6,"storage":0,"hover":"","comments":"\nDesignated initializer for a call.\n\\param requestOptions Protobuf generated parameters for the call.\n\\param responseHandler The object to which responses should be issued.\n\\param callOptions Options for the call.","declarations":[{"spell":"142:17-142:39|4|2|1","param_spellings":["142:62-142:76","143:65-143:80","144:68-144:79"]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":11461227321003456795,"detailed_name":"- (instancetype)initWithRequestOptions:(GRPCRequestOptions *)requestOptions responseHandler:(id<GRPCResponseHandler>)responseHandler","short_name_offset":-1,"short_name_size":39,"kind":6,"storage":0,"hover":"","comments":"\nConvenience initializer for a call that uses default call options (see GRPCCallOptions.m for\nthe default options).","declarations":[{"spell":"150:17-150:39|4|2|1","param_spellings":["150:62-150:76","151:65-151:80"]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":17278253029937353248,"detailed_name":"- (void)start","short_name_offset":8,"short_name_size":5,"kind":6,"storage":0,"hover":"","comments":"\nStarts the call. This function must only be called once for each instance.","declarations":[{"spell":"156:9-156:14|4|2|1","param_spellings":[]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":5611503780338336991,"detailed_name":"- (void)cancel","short_name_offset":8,"short_name_size":6,"kind":6,"storage":0,"hover":"","comments":"\nCancel the request of this call at best effort. It attempts to notify the server that the RPC\nshould be cancelled, and issue didCloseWithTrailingMetadata:error: callback with error code\nCANCELED if no other error code has already been issued.","declarations":[{"spell":"163:9-163:15|4|2|1","param_spellings":[]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":9219779983416495871,"detailed_name":"- (void)writeData:(id)data","short_name_offset":8,"short_name_size":10,"kind":6,"storage":0,"hover":"","comments":"\nSend a message to the server. The data is subject to marshaller serialization and compression\n(marshaller is work in progress).","declarations":[{"spell":"169:9-169:18|4|2|1","param_spellings":["169:23-169:27"]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":18,"usr":16752280370698303227,"detailed_name":"- (void)finish","short_name_offset":8,"short_name_size":6,"kind":6,"storage":0,"hover":"","comments":"\nFinish the RPC request and half-close the call. The server may still send messages and/or\ntrailers to the client. The method must only be called once and after start is called.","declarations":[{"spell":"175:9-175:15|4|2|1","param_spellings":[]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":19,"usr":18343171458413417651,"detailed_name":"- (void)receiveNextMessages:(id)numberOfMessages","short_name_offset":8,"short_name_size":20,"kind":6,"storage":0,"hover":"","comments":"\nTell gRPC to receive the next N gRPC messages.\n\nThis method should only be used when flow control is enabled. When flow control is not enabled,\nthis method is a no-op.","declarations":[{"spell":"183:9-183:28|4|2|1","param_spellings":["183:41-183:57"]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":20,"usr":11421172325712059778,"detailed_name":"- (int *)callOptions","short_name_offset":9,"short_name_size":11,"kind":6,"storage":0,"hover":"","comments":"","declarations":[{"spell":"0:0-0:0|4|2|1","param_spellings":[]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":21,"usr":13027630544397457657,"detailed_name":"- (GRPCRequestOptions *)requestOptions","short_name_offset":24,"short_name_size":14,"kind":6,"storage":0,"hover":"","comments":"","declarations":[{"spell":"0:0-0:0|4|2|1","param_spellings":[]}],"declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":10941631271152658880,"detailed_name":"int *GRPCRequestOptions::host","short_name_offset":25,"short_name_size":4,"hover":"","comments":"The host serving the RPC service.","declarations":["114:37-114:41|1|2|1"],"type":3,"uses":[],"kind":7,"storage":0},{"id":1,"usr":9064023203426290080,"detailed_name":"int *GRPCRequestOptions::path","short_name_offset":25,"short_name_size":4,"hover":"","comments":"The path to the RPC call.","declarations":["116:37-116:41|1|2|1"],"type":3,"uses":[],"kind":7,"storage":0},{"id":2,"usr":10843567767994238657,"detailed_name":"int GRPCRequestOptions::safety","short_name_offset":24,"short_name_size":6,"hover":"","comments":"\nSpecify whether the call is idempotent or cachable. gRPC may select different HTTP verbs for the\ncall based on this information. The default verb used by gRPC is POST.","declarations":["121:36-121:42|1|2|1"],"type":3,"uses":[],"kind":7,"storage":0},{"id":3,"usr":8854053503564893079,"detailed_name":"int *GRPCCall2::callOptions","short_name_offset":16,"short_name_size":11,"hover":"","comments":"\nGet a copy of the original call options.","declarations":["188:44-188:55|4|2|1"],"type":3,"uses":[],"kind":7,"storage":0},{"id":4,"usr":16240584957126849979,"detailed_name":"GRPCRequestOptions *GRPCCall2::requestOptions","short_name_offset":31,"short_name_size":14,"hover":"","comments":"Get a copy of the original request options.","declarations":["191:47-191:61|4|2|1"],"type":1,"uses":[],"kind":7,"storage":0}]}