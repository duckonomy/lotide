16
{"last_modification_time":1572485085,"language":2,"import_file":"/home/duckonomy/Development/Git/cquery/third_party/rapidjson/thirdparty/gtest/googlemock/src/gmock-spec-builders.cc","args_hash":8583860895283344595,"includes":[{"line":38,"resolved_path":"/usr/include/c++/9/stdlib.h"},{"line":39,"resolved_path":"/usr/include/c++/9/iostream"},{"line":40,"resolved_path":"/usr/include/c++/9/map"},{"line":41,"resolved_path":"/usr/include/c++/9/set"},{"line":42,"resolved_path":"/usr/include/c++/9/string"}],"dependencies":["/usr/include/c++/9/stdlib.h","/usr/include/c++/9/cstdlib","/usr/include/c++/9/x86_64-redhat-linux/bits/c++config.h","/usr/include/bits/wordsize.h"],"skipped_by_preprocessor":["47:1-49:7"],"types":[{"id":0,"usr":9522224876843422807,"detailed_name":"testing","short_name_offset":0,"short_name_size":7,"kind":3,"hover":"","comments":"","declarations":[],"spell":"51:11-51:18|-1|1|2","extent":"51:1-823:2|-1|1|0","bases":[1],"derived":[2],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["51:11-51:18|-1|1|4"]},{"id":1,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":2,"usr":3760883318488515758,"detailed_name":"testing::internal","short_name_offset":9,"short_name_size":8,"kind":3,"hover":"","comments":"","declarations":[],"spell":"52:11-52:19|0|2|2","extent":"52:1-512:2|0|2|0","bases":[0],"derived":[],"types":[],"funcs":[0,1],"vars":[0],"instances":[],"uses":["52:11-52:19|0|2|4"]},{"id":3,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,2,3,4,4,7,8,10,13],"uses":[]},{"id":4,"usr":7144845543074395457,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[12,13],"instances":[],"uses":[]},{"id":5,"usr":5298763288233665069,"detailed_name":"testing::(anon)::FunctionMockers","short_name_offset":17,"short_name_size":15,"kind":252,"hover":"typedef std::set<internal::UntypedFunctionMockerBase*> testing::(anon)::FunctionMockers","comments":"","declarations":[],"spell":"518:56-518:71|4|2|2","extent":"518:1-518:71|4|2|0","alias_of":3,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[9],"uses":["518:56-518:71|4|2|4","534:3-534:18|-1|1|4"]},{"id":6,"usr":15344748608199870099,"detailed_name":"testing::(anon)::MockObjectState","short_name_offset":17,"short_name_size":15,"kind":23,"hover":"","comments":"The current state of a mock object.  Such information is needed for\ndetecting leaked mock objects and explicitly verifying a mock's\nexpectations.","declarations":["524:3-524:18|-1|1|4"],"spell":"523:8-523:23|4|2|2","extent":"523:1-535:2|4|2|0","bases":[],"derived":[],"types":[],"funcs":[2],"vars":[6,4,7,8,5,9],"instances":[],"uses":["524:3-524:18|6|2|4"]},{"id":7,"usr":3,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[5,5],"uses":[]},{"id":8,"usr":13,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[6],"uses":[]},{"id":9,"usr":4471474445415085032,"detailed_name":"testing::(anon)::MockObjectRegistry","short_name_offset":17,"short_name_size":18,"kind":5,"hover":"","comments":"A global registry holding the state of all mock objects that are\nalive.  A mock object is added to this registry the first time\nMock::AllowLeak(), ON_CALL(), or EXPECT_CALL() is called on it.  It\nis removed from the registry in the mock object's destructor.","declarations":["550:4-550:22|-1|1|4"],"spell":"541:7-541:25|4|2|2","extent":"541:1-596:2|4|2|0","bases":[],"derived":[],"types":[],"funcs":[3,4],"vars":[11],"instances":[12],"uses":["599:1-599:19|-1|1|4"]},{"id":10,"usr":693161579430891236,"detailed_name":"testing::(anon)::MockObjectRegistry::StateMap","short_name_offset":37,"short_name_size":8,"kind":252,"hover":"typedef std::map<const void*, MockObjectState> testing::(anon)::MockObjectRegistry::StateMap","comments":"Maps a mock object (identified by its address) to its state.","declarations":[],"spell":"544:50-544:58|9|2|2","extent":"544:3-544:58|9|2|0","alias_of":3,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[11,11],"uses":["544:50-544:58|9|2|4","592:3-592:11|-1|1|4","595:3-595:11|-1|1|4"]}],"funcs":[{"id":0,"usr":5164405112530477107,"detailed_name":"int testing::internal::GTEST_DEFINE_STATIC_MUTEX_(int)","short_name_offset":23,"short_name_size":26,"kind":12,"storage":1,"hover":"","comments":"Protects the mock object registry (in class Mock), all function\nmockers, and all expectations.","declarations":[{"spell":"56:12-56:38|2|2|1","param_spellings":["56:52-56:52"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":13277565270340521337,"detailed_name":"void testing::internal::ReportUninterestingCall(int reaction, const int &msg)","short_name_offset":24,"short_name_size":23,"kind":12,"storage":1,"hover":"","comments":"Reports an uninteresting call (whose description is in msg) in the\nmanner specified by 'reaction'.","declarations":[],"spell":"247:6-247:29|2|2|2","extent":"247:1-268:2|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[1,2,3],"uses":[],"callees":[]},{"id":2,"usr":2314289060056535995,"detailed_name":"testing::(anonymous namespace)::MockObjectState::MockObjectState()","short_name_offset":32,"short_name_size":15,"kind":9,"storage":1,"hover":"","comments":"","declarations":[],"spell":"524:3-524:18|6|2|2","extent":"524:3-525:71|6|2|0","declaring_type":6,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":15478136113158383027,"detailed_name":"testing::(anonymous namespace)::MockObjectRegistry::~MockObjectRegistry() noexcept","short_name_offset":52,"short_name_size":19,"kind":6,"storage":1,"hover":"","comments":"This destructor will be called when a program exits, after all\ntests in it have been run.  By then, there should be no mock\nobject alive.  Therefore we report any living object as test\nfailure, unless the user explicitly asked us to ignore it.","declarations":[],"spell":"550:3-550:22|9|2|2","extent":"550:3-590:4|9|2|0","declaring_type":9,"bases":[],"derived":[],"vars":[10],"uses":[],"callees":[]},{"id":4,"usr":9981261351695931705,"detailed_name":"testing::(anonymous namespace)::MockObjectRegistry::StateMap &testing::(anonymous namespace)::MockObjectRegistry::states()","short_name_offset":114,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"592:13-592:19|9|2|2","extent":"592:3-592:41|9|2|0","declaring_type":9,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":9664003096186588247,"detailed_name":"int testing::internal::ThreadLocal","short_name_offset":23,"short_name_size":11,"hover":"","comments":"Points to the implicit sequence introduced by a living InSequence\nobject (if any) in the current thread or NULL.","declarations":[],"spell":"243:12-243:23|2|2|2","extent":"243:1-243:23|2|2|0","type":3,"uses":[],"kind":13,"storage":1},{"id":1,"usr":12334577540178672176,"detailed_name":"int reaction","short_name_offset":4,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"247:43-247:51|1|3|2","extent":"247:30-247:51|1|3|0","type":3,"uses":[],"kind":253,"storage":1},{"id":2,"usr":337736342215192932,"detailed_name":"const int &msg","short_name_offset":11,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"247:67-247:70|1|3|2","extent":"247:53-247:70|1|3|0","type":3,"uses":[],"kind":253,"storage":1},{"id":3,"usr":16167248047763696024,"detailed_name":"const int stack_frames_to_skip","short_name_offset":10,"short_name_size":20,"hover":"","comments":"Include a stack trace only if --gmock_verbose=info is specified.","declarations":[],"spell":"249:13-249:33|1|3|2","extent":"249:3-249:33|1|3|0","type":3,"uses":[],"kind":13,"storage":1},{"id":4,"usr":14445850671910906901,"detailed_name":"int testing::(anon)::MockObjectState::first_used_line","short_name_offset":38,"short_name_size":15,"hover":"","comments":"","declarations":[],"spell":"530:7-530:22|6|2|2","extent":"530:3-530:22|6|2|0","type":3,"uses":["525:32-525:47|2|3|20"],"kind":8,"storage":0},{"id":5,"usr":12544903011777037806,"detailed_name":"bool testing::(anon)::MockObjectState::leakable","short_name_offset":39,"short_name_size":8,"hover":"","comments":"true iff it's OK to leak the object.","declarations":[],"spell":"533:8-533:16|6|2|2","extent":"533:3-533:16|6|2|0","type":7,"uses":["525:53-525:61|2|3|20"],"kind":8,"storage":0},{"id":6,"usr":1878839572974991581,"detailed_name":"const char *testing::(anon)::MockObjectState::first_used_file","short_name_offset":46,"short_name_size":15,"hover":"","comments":"Where in the source file an ON_CALL or EXPECT_CALL is first\ninvoked on this mock object.","declarations":[],"spell":"529:15-529:30|6|2|2","extent":"529:3-529:30|6|2|0","type":8,"uses":[],"kind":8,"storage":0},{"id":7,"usr":9435308005202104324,"detailed_name":"int testing::(anon)::MockObjectState::first_used_test_case","short_name_offset":38,"short_name_size":20,"hover":"","comments":"","declarations":[],"spell":"531:17-531:37|6|2|2","extent":"531:3-531:37|6|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":8,"usr":1516207944618846763,"detailed_name":"int testing::(anon)::MockObjectState::first_used_test","short_name_offset":38,"short_name_size":15,"hover":"","comments":"","declarations":[],"spell":"532:17-532:32|6|2|2","extent":"532:3-532:32|6|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":9,"usr":11336097348315650865,"detailed_name":"testing::(anonymous namespace)::FunctionMockers testing::(anon)::MockObjectState::function_mockers","short_name_offset":82,"short_name_size":16,"hover":"","comments":"All registered methods of the object.","declarations":[],"spell":"534:19-534:35|6|2|2","extent":"534:3-534:35|6|2|0","type":5,"uses":[],"kind":8,"storage":0},{"id":10,"usr":13268750337904719574,"detailed_name":"int leaked_count","short_name_offset":4,"short_name_size":12,"hover":"int leaked_count = 0","comments":"","declarations":[],"spell":"557:9-557:21|3|3|2","extent":"557:5-557:25|3|3|0","type":3,"uses":["578:9-578:21|3|3|12"],"kind":13,"storage":1},{"id":11,"usr":14223810510750653555,"detailed_name":"testing::(anonymous namespace)::MockObjectRegistry::StateMap testing::(anon)::MockObjectRegistry::states_","short_name_offset":98,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"595:12-595:19|9|2|2","extent":"595:3-595:19|9|2|0","type":10,"uses":["592:31-592:38|4|3|4"],"kind":8,"storage":0},{"id":12,"usr":599309962721800342,"detailed_name":"testing::(anonymous namespace)::MockObjectRegistry testing::(anon)::g_mock_object_registry","short_name_offset":68,"short_name_size":22,"hover":"","comments":"Protected by g_gmock_mutex.","declarations":[],"spell":"599:20-599:42|4|2|2","extent":"599:1-599:42|4|2|0","type":9,"uses":[],"kind":13,"storage":1},{"id":13,"usr":9102021307982532465,"detailed_name":"int testing::(anon)::g_uninteresting_call_reaction","short_name_offset":21,"short_name_size":29,"hover":"","comments":"Maps a mock object to the reaction Google Mock should have when an\nuninteresting method is called.  Protected by g_gmock_mutex.","declarations":[],"spell":"603:47-603:76|4|2|2","extent":"603:1-603:76|4|2|0","type":3,"uses":[],"kind":13,"storage":1},{"id":14,"usr":13838176792705659279,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["310:31-310:39|-1|1|4","310:41-310:49|-1|1|4","327:27-327:35|-1|1|4","327:37-327:45|-1|1|4","458:17-458:25|-1|1|4","458:27-458:35|-1|1|4"],"kind":0,"storage":0}]}